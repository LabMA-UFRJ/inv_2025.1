-- Contagem por individuo
CREATE VIEW ANALISES_SOB_IND AS

-- SUBCONSULTA PARA DADOS DA AT_INV
WITH CTE_AT_SOB AS
    ( -- Contagens a partir do criterio de individuos na tabela de ativos
    SELECT REF_INFO, EMP, COD_EMP, PRODUTO, SEXO_CORR, REF_INFO - EXTRACT(YEAR FROM DATA_NASC) AS IDADE_31_DEZ, COUNT(*) AS QTDE_AT_IND,
     -- CALCULO ESTOQUES
        SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) < REF_INFO AND 
            EXTRACT(YEAR FROM DATA_INGR) > 1900
            THEN 1 ELSE 0 END) AS ESTOQUE_INICIAL,
        SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) = 1900 THEN 1 ELSE 0 END) AS ESTOQUE_FINAL,
        SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) = REF_INFO THEN 1 ELSE 0 END) AS ENTRADA,
        -- CALCULO DO TOTAL REGISTROS NO AGRUPAMENTO, SEM CONSIDERAR AS REPETIÇÕES DE QUEM É ESTOQUE FINAL (EM TESE ESSA CONTA DEVERIA SER ESTOQUE_INICIAL+ENTRADAS) 
        (
            SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) < REF_INFO THEN 1 ELSE 0 END) +
            SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) = 1900 THEN 1 ELSE 0 END)
        ) / 2.0 AS EXPOSICAO
    FROM 
    ( -- Nessa consulta eu agrupo os registros para o criterio de individuo, de modo que depois eu possa fazer as contagens para esse agrupamento
    SELECT REF_INFO, EMP, COD_EMP, CPF,  DATA_NASC, DATA_INGR, PRODUTO, -- Verificar criterio de escolha para a cobertura
        CASE WHEN SEXO NOT IN (N'M', N'F', N'm', N'f') THEN N'UNI' ELSE SEXO END SEXO_CORR,
        MIN(DATA_INGR) AS MIN_DATA_INGR,
        MAX(DATA_INGR) AS MAX_DATA_INGR
    FROM dados_parquet.at_sob_000 
    WHERE LINHA_VALIDA = 1
    GROUP BY REF_INFO, EMP, COD_EMP, CPF, DATA_NASC, DATA_INGR, PRODUTO, CASE WHEN SEXO NOT IN (N'M', N'F', N'm', N'f') THEN N'UNI' ELSE SEXO END
    )  ATIVOS_INV_BASE

    GROUP BY REF_INFO, EMP, COD_EMP, SEXO_CORR, REF_INFO - EXTRACT(YEAR FROM DATA_NASC), PRODUTO
    ),
 
CTE_SA_SOB AS
    (-- Contagens a partir do criterio de individuos na tabela de saidas
    SELECT REF_INFO, EMP, COD_EMP, SEXO_CORR, REF_INFO - EXTRACT(YEAR FROM DATA_NASC) AS IDADE_31_DEZ, COUNT(*) AS QTDE_SA_IND, PRODUTO,
        SUM(CASE WHEN MOT_SAIDA = 100 THEN 1 ELSE 0 END) AS OBITO_100,
        SUM(CASE WHEN MOT_SAIDA = 200 THEN 1 ELSE 0 END) AS OBITO_200,
        SUM(CASE WHEN MOT_SAIDA = 300 THEN 1 ELSE 0 END) AS OBITO_300,
        SUM(CASE WHEN MOT_SAIDA = 400 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_400,
        SUM(CASE WHEN MOT_SAIDA = 500 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_500,
        SUM(CASE WHEN MOT_SAIDA = 600 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_600,
        SUM(CASE WHEN MOT_SAIDA = 700 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_700,
        SUM(CASE WHEN MOT_SAIDA = 800 THEN 1 ELSE 0 END) AS APOSENTADORIA,
        SUM(CASE WHEN MOT_SAIDA = 900 THEN 1 ELSE 0 END) AS OUTRAS_SAIDAS
    FROM 
    ( -- Nessa consulta eu agrupo os registros para o criterio de individuo, de modo que depois eu possa fazer as contagens para esse agrupamento
    SELECT REF_INFO, EMP, COD_EMP, CPF, DATA_NASC, MOT_SAIDA, PRODUTO,
        CASE WHEN SEXO NOT IN (N'M', N'F', N'm', N'f') THEN N'UNI' ELSE SEXO END SEXO_CORR
    FROM dados_parquet.sa_sob_000 
    WHERE LINHA_VALIDA = 1
    GROUP BY REF_INFO, EMP, COD_EMP, CPF, DATA_NASC, MOT_SAIDA, PRODUTO, CASE WHEN SEXO NOT IN (N'M', N'F', N'm', N'f') THEN N'UNI' ELSE SEXO END
    ) SAIDAS_INV_BASE

    GROUP BY REF_INFO, EMP, COD_EMP, SEXO_CORR, REF_INFO - EXTRACT(YEAR FROM DATA_NASC), PRODUTO
    )

-- CONSULTA FINAL PARA UNIR AS DUAS SUBCONSULTAS
    
SELECT 
    COALESCE(T1.REF_INFO,T2.REF_INFO) AS REF_INFO,
    COALESCE(T1.EMP,T2.EMP) AS EMP,
    COALESCE(T1.COD_EMP,T2.COD_EMP) AS COD_EMP,
    COALESCE(T1.IDADE_31_DEZ,T2.IDADE_31_DEZ) AS IDADE_31_DEZ,
    COALESCE(T1.SEXO_CORR, T2.SEXO_CORR) AS SEXO,
    COALESCE(T1.PRODUTO,T2.PRODUTO) AS PRODUTO, 
    T1.QTDE_AT_IND AS REGISTROS_AT, 
    T1.ESTOQUE_INICIAL AS ESTOQUE_INICIAL, 
    T1.ESTOQUE_FINAL AS ESTOQUE_FINAL, 
    T1.ENTRADA AS ENTRADA, 
    T1.EXPOSICAO AS EXPOSICAO, 
    T1.ESTOQUE_INICIAL + T1.ENTRADA - T1.ESTOQUE_FINAL AS SAIDAS_CALCULADAS,
    T2.QTDE_SA_IND AS REGISTROS_SA, 
    T2.OBITO_100,
    T2.OBITO_200,
    T2.OBITO_300,
    T2.ENTRADA_INVALIDEZ_400,
    T2.ENTRADA_INVALIDEZ_500,
    T2.ENTRADA_INVALIDEZ_600,
    T2.ENTRADA_INVALIDEZ_700,
    (COALESCE(T2.OBITO_100, 0) + COALESCE(T2.OBITO_200, 0) + COALESCE(T2.OBITO_300, 0)) AS OBITOS,
    (COALESCE(T2.ENTRADA_INVALIDEZ_400, 0) + COALESCE(T2.ENTRADA_INVALIDEZ_500, 0) + COALESCE(T2.ENTRADA_INVALIDEZ_600, 0) + COALESCE(T2.ENTRADA_INVALIDEZ_700, 0)) AS ENTRADAS_INVALIDEZ,
    T2.APOSENTADORIA,
    T2.OUTRAS_SAIDAS
    

FROM CTE_AT_SOB  T1
FULL OUTER JOIN CTE_SA_SOB  T2
    ON
    T1.REF_INFO = T2.REF_INFO
    AND T1.COD_EMP = T2.COD_EMP
    AND T1.EMP = T2.EMP
    AND T1.IDADE_31_DEZ = T2.IDADE_31_DEZ
    AND T1.SEXO_CORR = T2.SEXO_CORR
    AND T1.PRODUTO = T2.PRODUTO;
  
  
  
