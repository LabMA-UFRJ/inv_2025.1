
-- Contagem por cpf unico 
CREATE VIEW ANALISES_MOR_CPF_UNI AS 
-- SUBCONSULTA PARA DADOS DA AT_MOR
    WITH CTE_AT_MOR AS
        (
        -- SELECIONO AS INFORMAÇÕES NECESSARIAS DA TABELA DE ATIVOS JÁ AGRUPADA POR CPF UNICO
        SELECT 
            REF_INFO, EMP, COD_EMP,  COUNT(*) AS QTDE_AT_CPF_UNI, PRODUTO, SEXO,
            -- CALCULO ESTOQUES
            SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) < REF_INFO 
                AND EXTRACT(YEAR FROM DATA_INGR) > 1900 
                THEN 1 ELSE 0 END) AS QTDE_ESTOQUE_INICIAL,
            SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) = 1900 THEN 1 ELSE 0 END) AS QTDE_ESTOQUE_FINAL,
            SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) = REF_INFO THEN 1 ELSE 0 END) AS QTDE_ENTRADAS,
            -- CALCULO DO TOTAL REGISTROS NO AGRUPAMENTO, SEM CONSIDERAR AS REPETIÇÕES DE QUEM É ESTOQUE FINAL (EM TESE ESSA CONTA DEVERIA SER ESTOQUE_INICIAL+ENTRADAS) 
            SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) > 1900 THEN 1 ELSE 0 END) AS QTDE_GERAL_AT,
            -- CALCULO IDADE
            ROUND((2 * REF_INFO - EXTRACT(YEAR FROM MAX_DATA_NASC) - EXTRACT(YEAR FROM MIN_DATA_NASC)) / 2) AS IDADE_CORR
        FROM 
        ( -- Seleção de cpfs unicos na tabela de ativos
        SELECT REF_INFO, DATA_INGR, PRODUTO, EMP, COD_EMP, CPF,
            CASE WHEN SEXO NOT IN (N'M', N'F', N'm', N'f') THEN N'UNI' ELSE SEXO END SEXO,
            MIN(DATA_INGR) AS MIN_DATA_INGR,
            MAX(DATA_INGR) AS MAX_DATA_INGR,
            MIN(DATA_NASC) AS MIN_DATA_NASC,
            MAX(DATA_NASC) AS MAX_DATA_NASC
        FROM dados_parquet.at_mor_000 
        WHERE LINHA_VALIDA = 1 AND ROWNUM < 1000
        GROUP BY REF_INFO, EMP, COD_EMP, CPF, PRODUTO, DATA_INGR, CASE WHEN SEXO NOT IN (N'M', N'F', N'm', N'f') THEN N'UNI' ELSE SEXO END
        ) ATIVOS_INV_BASE

        GROUP BY REF_INFO, EMP, COD_EMP, ROUND((2 * REF_INFO - EXTRACT(YEAR FROM MAX_DATA_NASC)- EXTRACT(YEAR FROM MIN_DATA_NASC)) / 2), PRODUTO, SEXO),

    -- SUBCONSULTA PARA DADOS DA SA_MOR
    CTE_SA_MOR AS
        (-- SELECIONO AS INFORMAÇÕES NECESSARIAS DA TABELA DE SAIDA JÁ AGRUPADA POR CPF UNICO
        SELECT REF_INFO, EMP,  COD_EMP,  PRODUTO, COUNT(*) AS QTDE_SA_CPF_UNI, SEXO,
            SUM(CASE WHEN MOT_SAIDA = 100 THEN 1 ELSE 0 END) AS OBITO_100,
            SUM(CASE WHEN MOT_SAIDA = 200 THEN 1 ELSE 0 END) AS OBITO_200,
            SUM(CASE WHEN MOT_SAIDA = 300 THEN 1 ELSE 0 END) AS OBITO_300,
            SUM(CASE WHEN MOT_SAIDA = 400 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_400,
            SUM(CASE WHEN MOT_SAIDA = 500 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_500,
            SUM(CASE WHEN MOT_SAIDA = 600 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_600,
            SUM(CASE WHEN MOT_SAIDA = 700 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_700,
            SUM(CASE WHEN MOT_SAIDA = 800 THEN 1 ELSE 0 END) AS APOSENTADORIA,
            SUM(CASE WHEN MOT_SAIDA = 900 THEN 1 ELSE 0 END) AS OUTRAS_SAIDAS,
            ROUND((2 * REF_INFO - EXTRACT(YEAR FROM MAX_DATA_NASC)- EXTRACT(YEAR FROM MIN_DATA_NASC)) / 2) AS IDADE_CORR

        FROM 
        ( -- Seleção de cpfs unicos na tabela de saida
        SELECT REF_INFO, EMP, COD_EMP, CPF, MOT_SAIDA, PRODUTO,
            CASE WHEN SEXO NOT IN (N'M', N'F', N'm', N'f') THEN N'UNI' ELSE SEXO END SEXO,
            MIN(DATA_NASC) AS MIN_DATA_NASC,
            MAX(DATA_NASC) AS MAX_DATA_NASC
        FROM dados_parquet.sa_mor_000
        WHERE LINHA_VALIDA = 1 AND ROWNUM < 1000
        GROUP BY REF_INFO, EMP, COD_EMP, CPF,  MOT_SAIDA, PRODUTO, CASE WHEN SEXO NOT IN (N'M', N'F', N'm', N'f') THEN N'UNI' ELSE SEXO END
        )  SAIDAS_INV_BASE

        GROUP BY REF_INFO, EMP, COD_EMP, PRODUTO, SEXO, ROUND((2 * REF_INFO - EXTRACT(YEAR FROM MAX_DATA_NASC)- EXTRACT(YEAR FROM MIN_DATA_NASC)) / 2))


    -- FULL OUTER JOIN 
        -- FOI FEITO COM INTUITO DE NAO EXCLUIR OS REGISTROS CORRESPONDENTES A UMA IDADE QUE SO TEM NA SA

    SELECT 
        COALESCE(T1.REF_INFO,T2.REF_INFO) AS REF_INFO, 
        COALESCE(T1.EMP,T2.EMP) AS EMP,
        COALESCE(T1.COD_EMP,T2.COD_EMP) AS COD_EMP,
        COALESCE(T1.PRODUTO,T2.PRODUTO) AS PRODUTO,
        COALESCE(T1.IDADE_CORR,T2.IDADE_CORR) AS IDADE_31_DEZ,
        COALESCE(T1.SEXO, T2.SEXO) AS SEXO,
        T1.QTDE_AT_CPF_UNI AS REGISTROS_AT, 
        T1.QTDE_ESTOQUE_INICIAL AS ESTOQUE_INICIAL, 
        T1.QTDE_ESTOQUE_FINAL AS ESTOQUE_FINAL, 
        T1.QTDE_ENTRADAS AS ENTRADAS, 
        ((T1.QTDE_ESTOQUE_INICIAL + T1.QTDE_ESTOQUE_FINAL)/2) AS EXPOSICAO, 
        T1.QTDE_ESTOQUE_INICIAL + T1.QTDE_ENTRADAS - T1.QTDE_ESTOQUE_FINAL AS SAIDAS_CALCULADAS,
        T2.QTDE_SA_CPF_UNI AS REGISTROS_SA,
        T2.OBITO_100,
        T2.OBITO_200,
        T2.OBITO_300,
        T2.ENTRADA_INVALIDEZ_400,
        T2.ENTRADA_INVALIDEZ_500,
        T2.ENTRADA_INVALIDEZ_600,
        T2.ENTRADA_INVALIDEZ_700,
        T2.APOSENTADORIA,
        T2.OUTRAS_SAIDAS,
        (COALESCE(T2.OBITO_100, 0) + COALESCE(T2.OBITO_200, 0) + COALESCE(T2.OBITO_300, 0)) AS OBITOS,
        (COALESCE(T2.ENTRADA_INVALIDEZ_400, 0) + COALESCE(T2.ENTRADA_INVALIDEZ_500, 0) + COALESCE(T2.ENTRADA_INVALIDEZ_600, 0) + COALESCE(T2.ENTRADA_INVALIDEZ_700, 0)) AS ENTRADAS_INVALIDEZ
    

    FROM CTE_AT_MOR  T1
    FULL OUTER JOIN CTE_SA_MOR T2
    ON
        T1.REF_INFO = T2.REF_INFO 
        AND T1.COD_EMP = T2.COD_EMP
        AND T1.EMP = T2.EMP 
        AND T1.IDADE_CORR = T2.IDADE_CORR
        AND T1.PRODUTO = T2.PRODUTO
        AND T1.SEXO = T2.SEXO;