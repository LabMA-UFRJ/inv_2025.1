SELECT
    COALESCE(A.REF_INFO, B.REF_INFO) AS REF_INFO,
    COALESCE(A.EMP, B.EMP) AS EMP,
    COALESCE(A.COD_EMP, B.COD_EMP) AS COD_EMP,
    COALESCE(A.PRODUTO, B.PRODUTO) AS PRODUTO, -- Added PRODUTO
    COALESCE(A.IDADE_31_DEZ, B.IDADE_31_DEZ) AS IDADE_31_DEZ,
    COALESCE(A.SEXO, B.SEXO) AS SEXO,
    COALESCE(A.COBERTURA, B.COBERTURA) AS COBERTURA,
    A.ESTOQUE_INICIAL,
    A.ENTRADA,
    A.ESTOQUE_FINAL,
    A.EXPOSICAO,
    B.OBITO_100,
    B.OBITO_200,
    B.OBITO_300,
    B.ENTRADA_INVALIDEZ_400,
    B.ENTRADA_INVALIDEZ_500,
    B.ENTRADA_INVALIDEZ_600,
    B.ENTRADA_INVALIDEZ_700,
    -- Summed OBITOS
    (COALESCE(B.OBITO_100, 0) + COALESCE(B.OBITO_200, 0) + COALESCE(B.OBITO_300, 0)) AS OBITOS,
    -- Summed ENTRADAS_INVALIDEZ
    (COALESCE(B.ENTRADA_INVALIDEZ_400, 0) + COALESCE(B.ENTRADA_INVALIDEZ_500, 0) + COALESCE(B.ENTRADA_INVALIDEZ_600, 0) + COALESCE(B.ENTRADA_INVALIDEZ_700, 0)) AS ENTRADAS_INVALIDEZ,
    B.APOSENTADORIA,
    B.OUTRAS_SAIDAS


FROM (
    SELECT
        REF_INFO,
        EMP,
        COD_EMP,
        PRODUTO,
        COBERTURA,
        (REF_INFO - EXTRACT(YEAR FROM DATA_NASC)) AS IDADE_31_DEZ,
        SEXO,
        SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) < REF_INFO THEN 1 ELSE 0 END) AS ESTOQUE_INICIAL,
        SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) = REF_INFO THEN 1 ELSE 0 END) AS ENTRADA,
        SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) = 1900 THEN 1 ELSE 0 END) AS ESTOQUE_FINAL,
        (
            SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) < REF_INFO THEN 1 ELSE 0 END) +
            SUM(CASE WHEN EXTRACT(YEAR FROM DATA_INGR) = 1900 THEN 1 ELSE 0 END)
        ) / 2.0 AS EXPOSICAO -- Ensure floating point division if sums can be odd
    FROM
        DADOS_PARQUET.AT_INV_000
    WHERE
        LINHA_VALIDA = 1
    GROUP BY
        REF_INFO,
        EMP,
        COD_EMP,
        PRODUTO,
        COBERTURA,
        (REF_INFO - EXTRACT(YEAR FROM DATA_NASC)),
        SEXO
) A
FULL OUTER JOIN (
    SELECT
        REF_INFO,
        EMP,
        COD_EMP,
        PRODUTO,
        COBERTURA,
        SEXO,
        (REF_INFO - EXTRACT(YEAR FROM DATA_NASC)) AS IDADE_31_DEZ,
        SUM(CASE WHEN MOT_SAIDA = 100 THEN 1 ELSE 0 END) AS OBITO_100,
        SUM(CASE WHEN MOT_SAIDA = 200 THEN 1 ELSE 0 END) AS OBITO_200,
        SUM(CASE WHEN MOT_SAIDA = 300 THEN 1 ELSE 0 END) AS OBITO_300,
        SUM(CASE WHEN MOT_SAIDA = 400 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_400,
        SUM(CASE WHEN MOT_SAIDA = 500 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_500,
        SUM(CASE WHEN MOT_SAIDA = 600 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_600,
        SUM(CASE WHEN MOT_SAIDA = 700 THEN 1 ELSE 0 END) AS ENTRADA_INVALIDEZ_700,
        SUM(CASE WHEN MOT_SAIDA = 800 THEN 1 ELSE 0 END) AS APOSENTADORIA,
        SUM(CASE WHEN MOT_SAIDA = 900 THEN 1 ELSE 0 END) AS OUTRAS_SAIDAS
    FROM
        DADOS_PARQUET.SA_INV_000
    WHERE
        LINHA_VALIDA = 1
    GROUP BY
        REF_INFO,
        EMP,
        COD_EMP,
        PRODUTO,
        (REF_INFO - EXTRACT(YEAR FROM DATA_NASC)),
        SEXO,
        COBERTURA
) B
ON A.REF_INFO = B.REF_INFO
   AND A.EMP = B.EMP
   AND A.COD_EMP = B.COD_EMP
   AND A.PRODUTO = B.PRODUTO
   AND A.IDADE_31_DEZ = B.IDADE_31_DEZ
   AND A.SEXO = B.SEXO
   AND A.COBERTURA = B.COBERTURA;