    -- Contagem por registro
        CREATE OR REPLACE VIEW TABELAO_VIEW_REG AS 

    -- SUBCONSULTA PARA DADOS DA AT_INV
    WITH CTE_AT_INV AS ( 
        SELECT REF_INFO, EMP, COD_EMP, SEXO, COBERTURA,
        -- CALCULO ESTOQUES
        SUM(CASE WHEN SUBSTR(DATA_INGR,1,4) < REF_INFO THEN 1 ELSE 0 END) AS QTDE_ESTOQUE_INICIAL,
        SUM(CASE WHEN DATA_INGR = 999999               THEN 1 ELSE 0 END) AS QTDE_ESTOQUE_FINAL,
        SUM(CASE WHEN SUBSTR(DATA_INGR,1,4) = REF_INFO THEN 1 ELSE 0 END) AS QTDE_ENTRADAS,
        -- CALCULO DO TOTAL REGISTROS NO AGRUPAMENTO, SEM CONSIDERAR AS REPETIÇÕES DE QUEM É ESTOQUE FINAL (EM TESE ESSA CONTA DEVERIA SER ESTOQUE_INICIAL+ENTRADAS) 
        SUM(CASE WHEN DATA_INGR <> 999999              THEN 1 ELSE 0 END) AS QTDE_GERAL_AT,
        -- CALCULO IDADE
        CASE 									 
        WHEN SUBSTR(DATA_NASC,1,2) between 19 and 20 THEN REF_INFO - SUBSTR(DATA_NASC,1,4)	-- YYYYMM								
        WHEN SUBSTR(DATA_NASC,1,2) between 01 and 12 THEN REF_INFO - SUBSTR(DATA_NASC,3,6)	-- MMYYYY							
        ELSE 000	
        END IDADE 

        FROM AT_INV_MOD  

        WHERE LINHA_VALIDA =  1

        GROUP BY REF_INFO, EMP, COD_EMP, SEXO,  COBERTURA, CASE 									 
        WHEN SUBSTR(DATA_NASC,1,2) between 19 and 20 THEN REF_INFO - SUBSTR(DATA_NASC,1,4)									
        WHEN SUBSTR(DATA_NASC,1,2) between 01 and 12 THEN REF_INFO - SUBSTR(DATA_NASC,3,6)								
        ELSE 000							
        END
    ),
    -- SUBCONSULTA PARA DADOS DA SA_INV
    CTE_SA_INV AS (
        SELECT REF_INFO, EMP,  COD_EMP, SEXO, COBERTURA,
        SUM(CASE WHEN MOT_SAIDA = 400 THEN 1 ELSE 0 END) AS INV_ACI,
        SUM(CASE WHEN MOT_SAIDA = 500 THEN 1 ELSE 0 END) AS INV_ACI_TB,
        SUM(CASE WHEN MOT_SAIDA = 600 THEN 1 ELSE 0 END) AS INV_DOE,
        SUM(CASE WHEN MOT_SAIDA = 700 THEN 1 ELSE 0 END) AS INV_DOE_TB,
        CASE 									 
        WHEN SUBSTR(DATA_NASC,1,2) between 19 and 20 THEN REF_INFO - SUBSTR(DATA_NASC,1,4)									
        WHEN SUBSTR(DATA_NASC,1,2) between 01 and 12 THEN REF_INFO - SUBSTR(DATA_NASC,3,6)								
        ELSE 000							
        END IDADE,
        COUNT(*) AS QTDE_GERAL_SA
        FROM SA_INV_MOD
        WHERE LINHA_VALIDA = 1
        GROUP BY REF_INFO, EMP, COD_EMP, SEXO,COBERTURA, CASE 									 
        WHEN SUBSTR(DATA_NASC,1,2) between 19 and 20 THEN REF_INFO - SUBSTR(DATA_NASC,1,4)									
        WHEN SUBSTR(DATA_NASC,1,2) between 01 and 12 THEN REF_INFO - SUBSTR(DATA_NASC,3,6)								
        ELSE 000							
        END
        )
    -- FULL OUTER JOIN ADAPTADO
        -- FOI FEITO COM INTUITO DE NAO EXCLUIR OS REGISTROS CORRESPONDENTES A UMA IDADE QUE SO TEM NA SA
    SELECT 
        COALESCE(T1.REF_INFO,T2.REF_INFO) AS REF_INFO,
        COALESCE(T1.EMP,T2.EMP) AS EMP,
        COALESCE(T1.COD_EMP,T2.COD_EMP) AS COD_EMP,
        COALESCE(T1.COBERTURA,T2.COBERTURA) AS COBERTURA,
        COALESCE(T1.SEXO,T2.SEXO) AS SEXO,
        COALESCE(T1.IDADE,T2.IDADE) AS IDADE,
        T1.QTDE_GERAL_AT AS REGISTROS_AT,
        T1.QTDE_ESTOQUE_INICIAL AS ESTOQUE_INICIAL, 
        T1.QTDE_ESTOQUE_FINAL AS ESTOQUE_FINAL, 
        T1.QTDE_ENTRADAS AS ENTRADAS, 
        T1.QTDE_ESTOQUE_INICIAL + T1.QTDE_ENTRADAS - T1.QTDE_ESTOQUE_FINAL AS SAIDAS_CALCULADAS,
        ((T1.QTDE_ESTOQUE_INICIAL + T1.QTDE_ESTOQUE_FINAL)/2) AS  EXPOSICAO, 
        T2.QTDE_GERAL_SA AS REGISTROS_SA,
        T2.INV_ACI, 
        T2.INV_ACI_TB, 
        T2.INV_DOE, 
        T2.INV_DOE_TB 

    FROM CTE_AT_INV  T1
    LEFT JOIN CTE_SA_INV  T2
    ON  
        T1.REF_INFO = T2.REF_INFO 
        AND T1.COD_EMP = T2.COD_EMP
        AND T1.EMP = T2.EMP 
        AND T1.SEXO = T2.SEXO
        AND T1.IDADE = T2.IDADE 
        AND T1.COBERTURA = T2.COBERTURA


    UNION

    SELECT 
        T3.REF_INFO, 
        T3.EMP,
        T3.COD_EMP,
        T3.COBERTURA,
        T3.SEXO, 
        T3.IDADE,
        T3.QTDE_GERAL_AT AS REGISTROS_AT, 
        T3.QTDE_ESTOQUE_INICIAL AS ESTOQUE_INICIAL, 
        T3.QTDE_ESTOQUE_FINAL AS ESTOQUE_FINAL, 
        T3.QTDE_ENTRADAS AS ENTRADAS, 
        T3.QTDE_ESTOQUE_INICIAL + T3.QTDE_ENTRADAS - T3.QTDE_ESTOQUE_FINAL AS SAIDAS_CALCULADAS,
        ((T3.QTDE_ESTOQUE_INICIAL + T3.QTDE_ESTOQUE_FINAL)/2) AS EXPOSICAO, 
        T4.QTDE_GERAL_SA AS REGISTROS_SA,
        T4.INV_ACI, 
        T4.INV_ACI_TB, 
        T4.INV_DOE, 
        T4.INV_DOE_TB 

    FROM CTE_AT_INV  T3
    RIGHT JOIN CTE_SA_INV T4
    ON  
        T3.REF_INFO = T4.REF_INFO 
        AND T3.COD_EMP = T4.COD_EMP
        AND T3.EMP = T4.EMP 
        AND T3.SEXO = T4.SEXO
        AND T3.IDADE = T4.IDADE 
        AND T3.COBERTURA = T4.COBERTURA;


-- Contagem por cpf unico 
CREATE OR REPLACE VIEW TABELAO_VIEW_CPF_UNI AS 
-- SUBCONSULTA PARA DADOS DA AT_INV
WITH CTE_AT_INV AS
    (
     -- SELECIONO AS INFORMAÇÕES NECESSARIAS DA TABELA DE ATIVOS JÁ AGRUPADA POR CPF UNICO
    SELECT REF_INFO, EMP, COD_EMP, COBERTURA, COUNT(*) AS QTDE_AT_CPF_UNI,
        -- CALCULO ESTOQUES
        SUM(CASE WHEN SUBSTR(MIN_DATA_INGR,1,4) < REF_INFO THEN 1 ELSE 0 END) AS QTDE_ESTOQUE_INICIAL,
        SUM(CASE WHEN MAX_DATA_INGR = 999999               THEN 1 ELSE 0 END) AS QTDE_ESTOQUE_FINAL,
        SUM(CASE WHEN SUBSTR(MIN_DATA_INGR,1,4) = REF_INFO THEN 1 ELSE 0 END) AS QTDE_ENTRADAS,
        -- CALCULO DO TOTAL REGISTROS NO AGRUPAMENTO, SEM CONSIDERAR AS REPETIÇÕES DE QUEM É ESTOQUE FINAL (EM TESE ESSA CONTA DEVERIA SER ESTOQUE_INICIAL+ENTRADAS) 
        SUM(CASE WHEN MAX_DATA_INGR <> 999999              THEN 1 ELSE 0 END) AS QTDE_GERAL_AT,
        -- CALCULO IDADE
        ROUND((2 * REF_INFO - SUBSTR(MAX_DATA_NASC,1,4)- SUBSTR(MIN_DATA_NASC,1,4)) / 2) AS IDADE_CORR
    FROM 
    ( -- Seleção de cpfs unicos na tabela de ativos
    SELECT REF_INFO, EMP, COD_EMP, CPF, COBERTURA, -- Verificar criterio de escolha para a cobertura
        MIN(DATA_INGR) AS MIN_DATA_INGR,
        MAX(DATA_INGR) AS MAX_DATA_INGR,
        MIN(DATA_NASC) AS MIN_DATA_NASC,
        MAX(DATA_NASC) AS MAX_DATA_NASC
    FROM AT_INV_MOD 
    WHERE LINHA_VALIDA = 1
    GROUP BY REF_INFO, EMP, COD_EMP, CPF, COBERTURA
    )  ATIVOS_INV_BASE

    GROUP BY REF_INFO, EMP, COD_EMP, COBERTURA, ROUND((2 * REF_INFO - SUBSTR(MAX_DATA_NASC,1,4)- SUBSTR(MIN_DATA_NASC,1,4)) / 2)
    ),

-- SUBCONSULTA PARA DADOS DA SA_INV
CTE_SA_INV AS
    (-- SELECIONO AS INFORMAÇÕES NECESSARIAS DA TABELA DE SAIDA JÁ AGRUPADA POR CPF UNICO
    SELECT REF_INFO, EMP,  COD_EMP, COBERTURA,COUNT(*) AS QTDE_SA_CPF_UNI,
        SUM(CASE WHEN MOT_SAIDA = 400 THEN 1 ELSE 0 END) AS INV_ACI,
        SUM(CASE WHEN MOT_SAIDA = 500 THEN 1 ELSE 0 END) AS INV_ACI_TB,
        SUM(CASE WHEN MOT_SAIDA = 600 THEN 1 ELSE 0 END) AS INV_DOE,
        SUM(CASE WHEN MOT_SAIDA = 700 THEN 1 ELSE 0 END) AS INV_DOE_TB,
        ROUND((2 * REF_INFO - SUBSTR(MAX_DATA_NASC,1,4)- SUBSTR(MIN_DATA_NASC,1,4)) / 2) AS IDADE_CORR
    FROM 
    ( -- Seleção de cpfs unicos na tabela de saida
    SELECT REF_INFO, EMP, COD_EMP, CPF, COBERTURA, MOT_SAIDA,
        MIN(DATA_NASC) AS MIN_DATA_NASC,
        MAX(DATA_NASC) AS MAX_DATA_NASC
    FROM SA_INV_MOD
    WHERE LINHA_VALIDA = 1
    GROUP BY REF_INFO, EMP, COD_EMP, CPF, COBERTURA, MOT_SAIDA
    )  SAIDAS_INV_BASE

    GROUP BY REF_INFO, EMP, COD_EMP, COBERTURA, ROUND((2 * REF_INFO - SUBSTR(MAX_DATA_NASC,1,4)- SUBSTR(MIN_DATA_NASC,1,4)) / 2)
    )

 -- FULL OUTER JOIN ADAPTADO
    -- FOI FEITO COM INTUITO DE NAO EXCLUIR OS REGISTROS CORRESPONDENTES A UMA IDADE QUE SO TEM NA SA

SELECT 
    T1.REF_INFO, 
    T1.EMP,
    T1.COD_EMP,
    T1.COBERTURA,  
    T1.IDADE_CORR,
    T1.QTDE_AT_CPF_UNI AS REGISTROS_AT, 
    T1.QTDE_ESTOQUE_INICIAL AS ESTOQUE_INICIAL, 
    T1.QTDE_ESTOQUE_FINAL AS ESTOQUE_FINAL, 
    T1.QTDE_ENTRADAS AS ENTRADAS, 
    ((T1.QTDE_ESTOQUE_INICIAL + T1.QTDE_ESTOQUE_FINAL)/2) AS EXPOSICAOO, 
    T1.QTDE_ESTOQUE_INICIAL + T1.QTDE_ENTRADAS - T1.QTDE_ESTOQUE_FINAL AS SAIDAS_CALCULADAS,
    T2.QTDE_SA_CPF_UNI AS REGISTROS_SA,
    T2.INV_ACI, 
    T2.INV_ACI_TB, 
    T2.INV_DOE, 
    T2.INV_DOE_TB 

FROM CTE_AT_INV  T1
LEFT JOIN CTE_SA_INV T2
ON
    T1.REF_INFO = T2.REF_INFO 
    AND T1.COD_EMP = T2.COD_EMP
    AND T1.EMP = T2.EMP 
    AND T1.IDADE_CORR = T2.IDADE_CORR
    AND T1.COBERTURA = T2.COBERTURA

UNION

SELECT 
    T3.REF_INFO, 
    T3.EMP,
    T3.COD_EMP,
    T3.COBERTURA,  
    T3.IDADE_CORR,
    T3.QTDE_AT_CPF_UNI AS REGISTROS_AT, 
    T3.QTDE_ESTOQUE_INICIAL AS ESTOQUE_INICIAL, 
    T3.QTDE_ESTOQUE_FINAL AS ESTOQUE_FINAL, 
    T3.QTDE_ENTRADAS AS ENTRADAS, 
    ((T3.QTDE_ESTOQUE_INICIAL + T3.QTDE_ESTOQUE_FINAL)/2) AS EXPOSICAO, 
    T3.QTDE_ESTOQUE_INICIAL + T3.QTDE_ENTRADAS - T3.QTDE_ESTOQUE_FINAL AS SAIDAS_CALCULADAS,
    T4.QTDE_SA_CPF_UNI AS REGISTROS_SA,
    T4.INV_ACI, 
    T4.INV_ACI_TB, 
    T4.INV_DOE, 
    T4.INV_DOE_TB 

FROM CTE_AT_INV  T3
RIGHT JOIN CTE_SA_INV  T4
ON
    T3.REF_INFO = T4.REF_INFO 
    AND T3.COD_EMP = T4.COD_EMP
    AND T3.EMP = T4.EMP 
    AND T3.IDADE_CORR = T4.IDADE_CORR
    AND T3.COBERTURA = T4.COBERTURA;

-- Contagem por individuo
CREATE VIEW TABELAO_VIEW_IND AS

-- SUBCONSULTA PARA DADOS DA AT_INV
WITH CTE_AT_INV AS
    ( -- Contagens a partir do criterio de individuos na tabela de ativos

    SELECT REF_INFO, EMP, COD_EMP, COBERTURA, SEXO_CORR, REF_INFO - SUBSTR(DATA_NASC,1,4) AS IDADE, COUNT(*) AS QTDE_AT_IND,
     -- CALCULO ESTOQUES
        SUM(CASE WHEN SUBSTR(MIN_DATA_INGR,1,4) < REF_INFO THEN 1 ELSE 0 END) AS QTDE_ESTOQUE_INICIAL,
        SUM(CASE WHEN MAX_DATA_INGR = 999999               THEN 1 ELSE 0 END) AS QTDE_ESTOQUE_FINAL,
        SUM(CASE WHEN SUBSTR(MIN_DATA_INGR,1,4) = REF_INFO THEN 1 ELSE 0 END) AS QTDE_ENTRADAS,
        -- CALCULO DO TOTAL REGISTROS NO AGRUPAMENTO, SEM CONSIDERAR AS REPETIÇÕES DE QUEM É ESTOQUE FINAL (EM TESE ESSA CONTA DEVERIA SER ESTOQUE_INICIAL+ENTRADAS) 
        SUM(CASE WHEN MAX_DATA_INGR <> 999999              THEN 1 ELSE 0 END) AS QTDE_GERAL_AT
    FROM 
    ( -- Nessa consulta eu agrupo os registros para o criterio de individuo, de modo que depois eu possa fazer as contagens para esse agrupamento
    SELECT REF_INFO, EMP, COD_EMP, CPF, COBERTURA, DATA_NASC, -- Verificar criterio de escolha para a cobertura
        CASE WHEN SEXO NOT IN ('M','F','m','f') THEN 'UNI' ELSE SEXO END SEXO_CORR,
        MIN(DATA_INGR) AS MIN_DATA_INGR,
        MAX(DATA_INGR) AS MAX_DATA_INGR
    FROM AT_INV_MOD
    WHERE LINHA_VALIDA = 1
    GROUP BY REF_INFO, EMP, COD_EMP, CPF, COBERTURA, DATA_NASC, CASE WHEN SEXO NOT IN ('M','F','m','f') THEN 'UNI' ELSE SEXO END 
    )  ATIVOS_INV_BASE

    GROUP BY REF_INFO, EMP, COD_EMP, COBERTURA, SEXO_CORR, REF_INFO - SUBSTR(DATA_NASC,1,4)
    ),
 
CTE_SA_INV AS
    (-- Contagens a partir do criterio de individuos na tabela de saidas
    SELECT REF_INFO, EMP, COD_EMP, COBERTURA, SEXO_CORR, REF_INFO - SUBSTR(DATA_NASC,1,4) AS IDADE, COUNT(*) AS QTDE_SA_IND,
        SUM(CASE WHEN MOT_SAIDA = 400 THEN 1 ELSE 0 END) AS INV_ACI,
        SUM(CASE WHEN MOT_SAIDA = 500 THEN 1 ELSE 0 END) AS INV_ACI_TB,
        SUM(CASE WHEN MOT_SAIDA = 600 THEN 1 ELSE 0 END) AS INV_DOE,
        SUM(CASE WHEN MOT_SAIDA = 700 THEN 1 ELSE 0 END) AS INV_DOE_TB
    FROM 
    ( -- Nessa consulta eu agrupo os registros para o criterio de individuo, de modo que depois eu possa fazer as contagens para esse agrupamento
    SELECT REF_INFO, EMP, COD_EMP, CPF, COBERTURA, DATA_NASC, MOT_SAIDA,
        CASE WHEN SEXO NOT IN ('M','F','m','f') THEN 'UNI' ELSE SEXO END SEXO_CORR
    FROM SA_INV_MOD
    WHERE LINHA_VALIDA = 1
    GROUP BY REF_INFO, EMP, COD_EMP, CPF, COBERTURA, DATA_NASC, MOT_SAIDA, CASE WHEN SEXO NOT IN ('M','F','m','f') THEN 'UNI' ELSE SEXO END
    ) SAIDAS_INV_BASE

    GROUP BY REF_INFO, EMP, COD_EMP, COBERTURA, SEXO_CORR, REF_INFO - SUBSTR(DATA_NASC,1,4)
    )

 -- FULL OUTER JOIN ADAPTADO
    -- FOI FEITO COM INTUITO DE NAO EXCLUIR OS REGISTROS CORRESPONDENTES A UMA IDADE QUE SO TEM NA SA
    
SELECT 
    T1.REF_INFO, 
    T1.EMP,
    T1.COD_EMP,
    T1.COBERTURA,
    T1.SEXO_CORR,
    T1.IDADE, 
    T1.QTDE_AT_IND AS REGISTROS_AT, 
    T1.QTDE_ESTOQUE_INICIAL AS ESTOQUE_INICIAL, 
    T1.QTDE_ESTOQUE_FINAL AS ESTOQUE_FINAL, 
    T1.QTDE_ENTRADAS AS ENTRADAS, 
    ((T1.QTDE_ESTOQUE_INICIAL + T1.QTDE_ESTOQUE_FINAL)/2) AS EXPOSICAO, 
    T1.QTDE_ESTOQUE_INICIAL + T1.QTDE_ENTRADAS - T1.QTDE_ESTOQUE_FINAL AS SAIDAS_CALCULADAS,
    T2.QTDE_SA_IND AS REGISTROS_SA, 
    T2.INV_ACI, 
    T2.INV_ACI_TB, 
    T2.INV_DOE, 
    T2.INV_DOE_TB 

FROM CTE_AT_INV  T1
LEFT JOIN CTE_SA_INV  T2
ON
    T1.REF_INFO = T2.REF_INFO 
    AND T1.COD_EMP = T2.COD_EMP
    AND T1.EMP = T2.EMP 
    AND T1.IDADE = T2.IDADE
    AND T1.COBERTURA = T2.COBERTURA
    AND T1.SEXO_CORR = T2.SEXO_CORR

UNION 

SELECT 
    T3.REF_INFO, 
    T3.EMP,
    T3.COD_EMP,
    T3.COBERTURA,
    T3.SEXO_CORR,
    T3.IDADE, 
    T3.QTDE_AT_IND AS REGISTROS_AT, 
    T3.QTDE_ESTOQUE_INICIAL AS ESTOQUE_INICIAL, 
    T3.QTDE_ESTOQUE_FINAL AS ESTOQUE_FINAL, 
    T3.QTDE_ENTRADAS AS ENTRADAS, 
    ((T3.QTDE_ESTOQUE_INICIAL + T3.QTDE_ESTOQUE_FINAL)/2) AS EXPOSIÇÃO, 
    T3.QTDE_ESTOQUE_INICIAL + T3.QTDE_ENTRADAS - T3.QTDE_ESTOQUE_FINAL AS SAIDAS_CALCULADAS,
    T4.QTDE_SA_IND AS REGISTROS_SA, 
    T4.INV_ACI, 
    T4.INV_ACI_TB, 
    T4.INV_DOE, 
    T4.INV_DOE_TB 

FROM CTE_AT_INV  T3
RIGHT JOIN CTE_SA_INV  T4
ON
    T3.REF_INFO = T4.REF_INFO 
    AND T3.COD_EMP = T4.COD_EMP
    AND T3.EMP = T4.EMP 
    AND T3.IDADE = T4.IDADE
    AND T3.COBERTURA = T4.COBERTURA
    AND T3.SEXO_CORR = T4.SEXO_CORR
    